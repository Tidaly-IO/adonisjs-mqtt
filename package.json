{
  "name": "@tidaly/mqtt",
  "version": "0.0.4",
  "description": "Mqtt client for AdonisJS",
  "homepage": "https://github.com/Tidaly-IO/adonisjs-mqtt#readme",
  "license": "MIT",
  "keywords": [
    "adonisjs",
    "mqtt"
  ],
  "author": "Maxime (github.com/MaximeMRF)",
  "main": "build/providers/MqttProvider.js",
  "files": [
    "build/adonis-typings",
    "build/commands",
    "build/providers",
    "build/src",
    "build/templates",
    "build/instructions.js",
    "build/instructions.md"
  ],
  "typings": "./build/adonis-typings/index.d.ts",
  "scripts": {
    "build": "npm run clean && npm run build-only && npm run copyfiles",
    "build-only": "tsc",
    "clean": "del-cli build",
    "copyfiles": "copyfiles \"templates/**/*.txt\" \"instructions.md\" build",
    "prepublishOnly": "npm run build"
  },
  "dependencies": {
    "async-mqtt": "^2.6.3"
  },
  "devDependencies": {
    "@adonisjs/application": "^5.3.0",
    "@adonisjs/core": "^5.9.0",
    "@adonisjs/sink": "^5.4.3",
    "copyfiles": "^2.4.1",
    "del-cli": "^5.0.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-adonis": "^2.1.1",
    "eslint-plugin-prettier": "^4.2.1",
    "prettier": "^2.8.8",
    "typescript": "^5.1.6"
  },
  "publishConfig": {
    "tag": "latest",
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Tidaly-IO/adonisjs-mqtt"
  },
  "bugs": {
    "url": "https://github.com/Tidaly-IO/adonisjs-mqtt/issues"
  },
  "adonisjs": {
    "instructions": "./build/instructions.js",
    "instructionsMd": "./build/instructions.md",
    "types": "@tidaly/mqtt",
    "providers": [
      "@tidaly/mqtt"
    ],
    "commands": [
      "@tidaly/mqtt/build/commands"
    ],
    "templates": {
      "basePath": "./build/templates"
    }
  },
  "eslintConfig": {
    "extends": [
      "plugin:adonis/typescriptPackage",
      "prettier"
    ],
    "plugins": [
      "prettier"
    ],
    "rules": {
      "prettier/prettier": [
        "error",
        {
          "endOfLine": "auto"
        }
      ]
    }
  },
  "prettier": {
    "arrowParens": "always",
    "printWidth": 100,
    "quoteProps": "consistent",
    "semi": true,
    "singleQuote": true,
    "trailingComma": "es5",
    "useTabs": true
  }
}